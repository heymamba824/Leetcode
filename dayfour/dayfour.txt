24. Swap Nodes in Pairs

Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.

Input: head = [1,2,3,4]
Output: [2,1,4,3]

交换节点时，一定要注意交换之后的指向会消失，所以每次记录好将要消失的下一个指针，这样就能避免出错
            temp1 = cur.next
            temp2 = cur.next.next.next

            cur.next = cur.next.next
            cur.next.next = temp1
            temp1.next = temp2
            cur = cur.next.next

19.Remove Nth Node From End of List

Given the head of a linked list, remove the nth node from the end of the list and return its head.

Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

使用快慢指针的办法，其中需要注意的细节，删除倒数n个节点，那么需要移动快指针n次而不是n-1次
删除节点一定要使用dummy head，这样方便删除head指针
return的是dummy.next 如果return head，一旦删除的节点是头节点就会出错